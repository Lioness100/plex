name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLEXAPI_AUTH_SERVER_BASEURL: http://127.0.0.1:32400
      PLEX_CONTAINER: plexinc/pms-docker
      PLEX_CONTAINER_TAG: latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: 16
      - name: install dependencies
        run: npm ci

      - name: Get PMS Docker image digest
        id: docker-digest
        run: |
          mkdir -p ~/.cache/docker/${{ env.PLEX_CONTAINER }}
          echo "Image: ${{ env.PLEX_CONTAINER }}"
          echo "Tag: ${{ env.PLEX_CONTAINER_TAG }}"
          token=$(curl \
            --silent \
            "https://auth.docker.io/token?scope=repository:${{ env.PLEX_CONTAINER }}:pull&service=registry.docker.io" \
            | jq -r '.token')
          digest=$(curl \
            --silent \
            --header "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            --header "Authorization: Bearer $token" \
            "https://registry-1.docker.io/v2/${{ env.PLEX_CONTAINER }}/manifests/${{ env.PLEX_CONTAINER_TAG }}" \
            | jq -r '.config.digest')
          echo "Digest: $digest"
          echo ::set-output name=digest::$digest

      - name: Pull PMS Docker image
        run: |
          docker pull ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}
          docker save -o ~/.cache/docker/${{ env.PLEX_CONTAINER }}-${{ env.PLEX_CONTAINER_TAG }}.tar ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}
          echo "Saved image: ${{ env.PLEX_CONTAINER }}:${{ env.PLEX_CONTAINER_TAG }}"

      - name: Load PMS Docker image
        run: |
          docker load -i ~/.cache/docker/${{ env.PLEX_CONTAINER }}-${{ env.PLEX_CONTAINER_TAG }}.tar

      - name: Set Plex credentials
        run: |
          echo "PLEXAPI_AUTH_SERVER_TOKEN=${{ secrets.PLEXAPI_AUTH_SERVER_TOKEN }}" >> $GITHUB_ENV

      - name: Bootstrap Plex server
        run: npm run bootstraptest -- \
            --advertise-ip 127.0.0.1 \
            --docker-tag ${{ env.PLEX_CONTAINER_TAG }} \
      - name: test
        run: npm run test:ci
      - name: lint
        run: npm run lint


  # coverage:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: Atrox/codecov-action@master
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
